{
  "description": "BGPAdvertisement allows to advertise the IPs coming from the selected IPAddressPools via BGP, setting the parameters of the BGP Advertisement.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "BGPAdvertisementSpec defines the desired state of BGPAdvertisement.",
      "type": "object",
      "properties": {
        "aggregationLength": {
          "description": "The aggregation-length advertisement option lets you \u201croll up\u201d the /32s into a larger prefix. Defaults to 32. Works for IPv4 addresses.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "aggregationLengthV6": {
          "description": "The aggregation-length advertisement option lets you \u201croll up\u201d the /128s into a larger prefix. Defaults to 128. Works for IPv6 addresses.",
          "type": "integer",
          "format": "int32"
        },
        "communities": {
          "description": "The BGP communities to be associated with the announcement. Each item can be a standard community of the form 1234:1234, a large community of the form large:1234:1234:1234 or the name of an alias defined in the Community CRD.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipAddressPoolSelectors": {
          "description": "A selector for the IPAddressPools which would get advertised via this advertisement. If no IPAddressPool is selected by this or by the list, the advertisement is applied to all the IPAddressPools.",
          "type": "array",
          "items": {
            "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
            "type": "object",
            "properties": {
              "matchExpressions": {
                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                "type": "array",
                "items": {
                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                  "type": "object",
                  "required": [
                    "key",
                    "operator"
                  ],
                  "properties": {
                    "key": {
                      "description": "key is the label key that the selector applies to.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                      "type": "string"
                    },
                    "values": {
                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "matchLabels": {
                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "x-kubernetes-map-type": "atomic"
          }
        },
        "ipAddressPools": {
          "description": "The list of IPAddressPools to advertise via this advertisement, selected by name.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "localPref": {
          "description": "The BGP LOCAL_PREF attribute which is used by BGP best path algorithm, Path with higher localpref is preferred over one with lower localpref.",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelectors": {
          "description": "NodeSelectors allows to limit the nodes to announce as next hops for the LoadBalancer IP. When empty, all the nodes having  are announced as next hops.",
          "type": "array",
          "items": {
            "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
            "type": "object",
            "properties": {
              "matchExpressions": {
                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                "type": "array",
                "items": {
                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                  "type": "object",
                  "required": [
                    "key",
                    "operator"
                  ],
                  "properties": {
                    "key": {
                      "description": "key is the label key that the selector applies to.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                      "type": "string"
                    },
                    "values": {
                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "matchLabels": {
                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "x-kubernetes-map-type": "atomic"
          }
        },
        "peers": {
          "description": "Peers limits the bgppeer to advertise the ips of the selected pools to. When empty, the loadbalancer IP is announced to all the BGPPeers configured.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "status": {
      "description": "BGPAdvertisementStatus defines the observed state of BGPAdvertisement.",
      "type": "object"
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "metallb.io",
      "kind": "BGPAdvertisement",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}